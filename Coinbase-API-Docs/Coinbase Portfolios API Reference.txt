# List Portfolios

GET
https://api.coinbase.com/api/v3/brokerage/portfolios
Get all portfolios of a user.

API Key Permissions

This endpoint requires the "view" permission.

Query Params
portfolio_type
string
Only returns portfolios matching this portfolio type.


Responses

200
A successful response.


Default
An unexpected error response.

REQUEST
import http.client
import json

conn = http.client.HTTPSConnection("api.coinbase.com")
payload = ''
headers = {
  'Content-Type': 'application/json'
}
conn.request("GET", "/api/v3/brokerage/portfolios", payload, headers)
res = conn.getresponse()
data = res.read()
print(data.decode("utf-8"))

RESPONSE
{
  "description": "A successful response.",
  "schema": {
    "type": "object",
    "properties": {
      "portfolios": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "uuid": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": [
                "UNDEFINED",
                "DEFAULT",
                "CONSUMER",
                "INTX"
              ],
              "default": "UNDEFINED"
            },
            "deleted": {
              "type": "boolean"
            }
          },
          "title": "Portfolio is the identifying information for a portfolio"
        }
      }
    }
  }
}

# Create Portfolio

POST
https://api.coinbase.com/api/v3/brokerage/portfolios
Create a portfolio.

API Key Permissions

This endpoint requires the "trade" permission (for any portfolio).

Body params
name
string
required
The name of the portfolio.


Responses

200
A successful response.


Default
An unexpected error response.

REQUEST
import http.client
import json

conn = http.client.HTTPSConnection("api.coinbase.com")
payload = ''
headers = {
  'Content-Type': 'application/json'
}
conn.request("POST", "/api/v3/brokerage/portfolios", payload, headers)
res = conn.getresponse()
data = res.read()
print(data.decode("utf-8"))

RESPONSE
{
  "description": "A successful response.",
  "schema": {
    "type": "object",
    "properties": {
      "portfolio": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "UNDEFINED",
              "DEFAULT",
              "CONSUMER",
              "INTX"
            ],
            "default": "UNDEFINED"
          },
          "deleted": {
            "type": "boolean"
          }
        },
        "title": "Portfolio is the identifying information for a portfolio"
      }
    }
  }
}

# Move Portfolio Funds

POST
https://api.coinbase.com/api/v3/brokerage/portfolios/move_funds
Move funds between portfolios.

API Key Permissions

This endpoint requires the "transfer" permission (for the source portfolio).

Body params
funds
object
required
The amount to be moved to the specified portfolio.

value
string
required
The amount of specified currency.


currency
string
required
The currency symbol (e.g. USD).


source_portfolio_uuid
string
required
The UUID of the portfolio to send funds from.


Example: 8bfc20d7-f7c6-4422-bf07-8243ca4169fe
target_portfolio_uuid
string
required
The UUID of the portfolio to send funds to.


Example: 8bfc20d7-f7c6-4422-bf07-8243ca4169fe
Responses

200
A successful response.


Default
An unexpected error response.

REQUEST
import http.client
import json

conn = http.client.HTTPSConnection("api.coinbase.com")
payload = ''
headers = {
  'Content-Type': 'application/json'
}
conn.request("POST", "/api/v3/brokerage/portfolios/move_funds", payload, headers)
res = conn.getresponse()
data = res.read()
print(data.decode("utf-8"))

RESPONSE
{
  "description": "A successful response.",
  "schema": {
    "type": "object",
    "properties": {
      "source_portfolio_uuid": {
        "type": "string",
        "example": "8bfc20d7-f7c6-4422-bf07-8243ca4169fe",
        "description": "The UUID of the portfolio to send funds from."
      },
      "target_portfolio_uuid": {
        "type": "string",
        "example": "8bfc20d7-f7c6-4422-bf07-8243ca4169fe",
        "description": "The UUID of the portfolio to send funds to."
      }
    }
  }
}


# Get Portfolio Breakdown

GET
https://api.coinbase.com/api/v3/brokerage/portfolios/{portfolio_uuid}
Get the breakdown of a portfolio.

API Key Permissions

This endpoint requires the "view" permission (for that portfolio).

î«†
Info
futures_unrealized_pnl will include unrealized PnL and intraday realized PnL (which has not yet settled to cash) and will not include fees in the calculation.
Path Params
portfolio_uuid
string
required
The portfolio UUID.


Query Params
currency
string
The currency symbol (e.g. USD).


Responses

200
A successful response.


Default
An unexpected error response.

REQUEST
import http.client
import json

conn = http.client.HTTPSConnection("api.coinbase.com")
payload = ''
headers = {
  'Content-Type': 'application/json'
}
conn.request("GET", "/api/v3/brokerage/portfolios/:portfolio_uuid", payload, headers)
res = conn.getresponse()
data = res.read()
print(data.decode("utf-8"))

RESPONSE
{
  "description": "A successful response.",
  "schema": {
    "type": "object",
    "properties": {
      "breakdown": {
        "type": "object",
        "properties": {
          "portfolio": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "uuid": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "UNDEFINED",
                  "DEFAULT",
                  "CONSUMER",
                  "INTX"
                ],
                "default": "UNDEFINED"
              },
              "deleted": {
                "type": "boolean"
              }
            },
            "title": "Portfolio is the identifying information for a portfolio"
          },
          "portfolio_balances": {
            "type": "object",
            "properties": {
              "total_balance": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "The amount of specified currency.",
                    "required": true
                  },
                  "currency": {
                    "type": "string",
                    "required": true,
                    "description": "The currency symbol (e.g. USD)."
                  }
                },
                "description": "Represents a monetary amount."
              },
              "total_futures_balance": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "The amount of specified currency.",
                    "required": true
                  },
                  "currency": {
                    "type": "string",
                    "required": true,
                    "description": "The currency symbol (e.g. USD)."
                  }
                },
                "description": "Represents a monetary amount."
              },
              "total_cash_equivalent_balance": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "The amount of specified currency.",
                    "required": true
                  },
                  "currency": {
                    "type": "string",
                    "required": true,
                    "description": "The currency symbol (e.g. USD)."
                  }
                },
                "description": "Represents a monetary amount."
              },
              "total_crypto_balance": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "The amount of specified currency.",
                    "required": true
                  },
                  "currency": {
                    "type": "string",
                    "required": true,
                    "description": "The currency symbol (e.g. USD)."
                  }
                },
                "description": "Represents a monetary amount."
              },
              "futures_unrealized_pnl": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "The amount of specified currency.",
                    "required": true
                  },
                  "currency": {
                    "type": "string",
                    "required": true,
                    "description": "The currency symbol (e.g. USD)."
                  }
                },
                "description": "Represents a monetary amount."
              },
              "perp_unrealized_pnl": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "The amount of specified currency.",
                    "required": true
                  },
                  "currency": {
                    "type": "string",
                    "required": true,
                    "description": "The currency symbol (e.g. USD)."
                  }
                },
                "description": "Represents a monetary amount."
              }
            },
            "title": "PortfolioBalances is a summary of all balances within a given portfolio"
          },
          "spot_positions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "asset": {
                  "type": "string"
                },
                "account_uuid": {
                  "type": "string"
                },
                "total_balance_fiat": {
                  "type": "number",
                  "format": "float"
                },
                "total_balance_crypto": {
                  "type": "number",
                  "format": "float"
                },
                "available_to_trade_fiat": {
                  "type": "number",
                  "format": "float"
                },
                "allocation": {
                  "type": "number",
                  "format": "float"
                },
                "one_day_change": {
                  "type": "number",
                  "format": "float"
                },
                "cost_basis": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "The amount of specified currency.",
                      "required": true
                    },
                    "currency": {
                      "type": "string",
                      "required": true,
                      "description": "The currency symbol (e.g. USD)."
                    }
                  },
                  "description": "Represents a monetary amount."
                },
                "asset_img_url": {
                  "type": "string"
                },
                "is_cash": {
                  "type": "boolean"
                }
              },
              "title": "PortfolioPosition represents a spot position for a user in a portfolio"
            }
          },
          "perp_positions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "product_id": {
                  "type": "string"
                },
                "product_uuid": {
                  "type": "string"
                },
                "symbol": {
                  "type": "string"
                },
                "asset_image_url": {
                  "type": "string"
                },
                "vwap": {
                  "type": "object",
                  "properties": {
                    "userNativeCurrency": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "string",
                          "description": "The amount of specified currency.",
                          "required": true
                        },
                        "currency": {
                          "type": "string",
                          "required": true,
                          "description": "The currency symbol (e.g. USD)."
                        }
                      },
                      "description": "Represents a monetary amount."
                    },
                    "rawCurrency": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "string",
                          "description": "The amount of specified currency.",
                          "required": true
                        },
                        "currency": {
                          "type": "string",
                          "required": true,
                          "description": "The currency symbol (e.g. USD)."
                        }
                      },
                      "description": "Represents a monetary amount."
                    }
                  }
                },
                "position_side": {
                  "type": "string",
                  "enum": [
                    "FUTURES_POSITION_SIDE_UNSPECIFIED",
                    "FUTURES_POSITION_SIDE_LONG",
                    "FUTURES_POSITION_SIDE_SHORT"
                  ],
                  "default": "FUTURES_POSITION_SIDE_UNSPECIFIED"
                },
                "net_size": {
                  "type": "string"
                },
                "buy_order_size": {
                  "type": "string"
                },
                "sell_order_size": {
                  "type": "string"
                },
                "im_contribution": {
                  "type": "string"
                },
                "unrealized_pnl": {
                  "type": "object",
                  "properties": {
                    "userNativeCurrency": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "string",
                          "description": "The amount of specified currency.",
                          "required": true
                        },
                        "currency": {
                          "type": "string",
                          "required": true,
                          "description": "The currency symbol (e.g. USD)."
                        }
                      },
                      "description": "Represents a monetary amount."
                    },
                    "rawCurrency": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "string",
                          "description": "The amount of specified currency.",
                          "required": true
                        },
                        "currency": {
                          "type": "string",
                          "required": true,
                          "description": "The currency symbol (e.g. USD)."
                        }
                      },
                      "description": "Represents a monetary amount."
                    }
                  }
                },
                "mark_price": {
                  "type": "object",
                  "properties": {
                    "userNativeCurrency": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "string",
                          "description": "The amount of specified currency.",
                          "required": true
                        },
                        "currency": {
                          "type": "string",
                          "required": true,
                          "description": "The currency symbol (e.g. USD)."
                        }
                      },
                      "description": "Represents a monetary amount."
                    },
                    "rawCurrency": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "string",
                          "description": "The amount of specified currency.",
                          "required": true
                        },
                        "currency": {
                          "type": "string",
                          "required": true,
                          "description": "The currency symbol (e.g. USD)."
                        }
                      },
                      "description": "Represents a monetary amount."
                    }
                  }
                },
                "liquidation_price": {
                  "type": "object",
                  "properties": {
                    "userNativeCurrency": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "string",
                          "description": "The amount of specified currency.",
                          "required": true
                        },
                        "currency": {
                          "type": "string",
                          "required": true,
                          "description": "The currency symbol (e.g. USD)."
                        }
                      },
                      "description": "Represents a monetary amount."
                    },
                    "rawCurrency": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "string",
                          "description": "The amount of specified currency.",
                          "required": true
                        },
                        "currency": {
                          "type": "string",
                          "required": true,
                          "description": "The currency symbol (e.g. USD)."
                        }
                      },
                      "description": "Represents a monetary amount."
                    }
                  }
                },
                "leverage": {
                  "type": "string"
                },
                "im_notional": {
                  "type": "object",
                  "properties": {
                    "userNativeCurrency": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "string",
                          "description": "The amount of specified currency.",
                          "required": true
                        },
                        "currency": {
                          "type": "string",
                          "required": true,
                          "description": "The currency symbol (e.g. USD)."
                        }
                      },
                      "description": "Represents a monetary amount."
                    },
                    "rawCurrency": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "string",
                          "description": "The amount of specified currency.",
                          "required": true
                        },
                        "currency": {
                          "type": "string",
                          "required": true,
                          "description": "The currency symbol (e.g. USD)."
                        }
                      },
                      "description": "Represents a monetary amount."
                    }
                  }
                },
                "mm_notional": {
                  "type": "object",
                  "properties": {
                    "userNativeCurrency": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "string",
                          "description": "The amount of specified currency.",
                          "required": true
                        },
                        "currency": {
                          "type": "string",
                          "required": true,
                          "description": "The currency symbol (e.g. USD)."
                        }
                      },
                      "description": "Represents a monetary amount."
                    },
                    "rawCurrency": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "string",
                          "description": "The amount of specified currency.",
                          "required": true
                        },
                        "currency": {
                          "type": "string",
                          "required": true,
                          "description": "The currency symbol (e.g. USD)."
                        }
                      },
                      "description": "Represents a monetary amount."
                    }
                  }
                },
                "position_notional": {
                  "type": "object",
                  "properties": {
                    "userNativeCurrency": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "string",
                          "description": "The amount of specified currency.",
                          "required": true
                        },
                        "currency": {
                          "type": "string",
                          "required": true,
                          "description": "The currency symbol (e.g. USD)."
                        }
                      },
                      "description": "Represents a monetary amount."
                    },
                    "rawCurrency": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "string",
                          "description": "The amount of specified currency.",
                          "required": true
                        },
                        "currency": {
                          "type": "string",
                          "required": true,
                          "description": "The currency symbol (e.g. USD)."
                        }
                      },
                      "description": "Represents a monetary amount."
                    }
                  }
                },
                "margin_type": {
                  "type": "string",
                  "enum": [
                    "MARGIN_TYPE_UNSPECIFIED",
                    "MARGIN_TYPE_CROSS",
                    "MARGIN_TYPE_ISOLATED"
                  ],
                  "default": "MARGIN_TYPE_UNSPECIFIED"
                },
                "liquidation_buffer": {
                  "type": "string"
                },
                "liquidation_percentage": {
                  "type": "string"
                }
              }
            }
          },
          "futures_positions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "product_id": {
                  "type": "string"
                },
                "contract_size": {
                  "type": "string"
                },
                "side": {
                  "type": "string",
                  "enum": [
                    "FUTURES_POSITION_SIDE_UNSPECIFIED",
                    "FUTURES_POSITION_SIDE_LONG",
                    "FUTURES_POSITION_SIDE_SHORT"
                  ],
                  "default": "FUTURES_POSITION_SIDE_UNSPECIFIED"
                },
                "amount": {
                  "type": "string"
                },
                "avg_entry_price": {
                  "type": "string"
                },
                "current_price": {
                  "type": "string"
                },
                "unrealized_pnl": {
                  "type": "string"
                },
                "expiry": {
                  "type": "string",
                  "format": "RFC3339 Timestamp"
                },
                "underlying_asset": {
                  "type": "string"
                },
                "asset_img_url": {
                  "type": "string"
                },
                "product_name": {
                  "type": "string"
                },
                "venue": {
                  "type": "string"
                },
                "notional_value": {
                  "type": "string"
                }
              },
              "title": "FuturesPosition represents a futures position"
            }
          }
        },
        "title": "PortfolioBreakdown is a breakdown of a portfolio, all balances, and all positions within the portfolio"
      }
    }
  }
}


# Delete Portfolio

DELETE
https://api.coinbase.com/api/v3/brokerage/portfolios/{portfolio_uuid}
Delete portfolio.

API Key Permissions

This endpoint requires the "trade" permission (for that portfolio).

Path Params
portfolio_uuid
string
required
The portfolio UUID.


Responses

200
A successful response.


Default
An unexpected error response.

REQUEST
import http.client
import json

conn = http.client.HTTPSConnection("api.coinbase.com")
payload = ''
headers = {
  'Content-Type': 'application/json'
}
conn.request("DELETE", "/api/v3/brokerage/portfolios/:portfolio_uuid", payload, headers)
res = conn.getresponse()
data = res.read()
print(data.decode("utf-8"))

RESPONSE
{
  "description": "A successful response.",
  "schema": {
    "type": "object"
  }
}

# Edit Portfolio

PUT
https://api.coinbase.com/api/v3/brokerage/portfolios/{portfolio_uuid}
Edit a portfolio.

API Key Permissions

This endpoint requires the "trade" permission (for that portfolio).

Path Params
portfolio_uuid
string
required
The portfolio UUID.


Body params
name
string
required
The name of the portfolio.


Responses

200
A successful response.


Default
An unexpected error response.

REQUEST
import http.client
import json

conn = http.client.HTTPSConnection("api.coinbase.com")
payload = ''
headers = {
  'Content-Type': 'application/json'
}
conn.request("PUT", "/api/v3/brokerage/portfolios/:portfolio_uuid", payload, headers)
res = conn.getresponse()
data = res.read()
print(data.decode("utf-8"))

RESPONSE
{
  "description": "A successful response.",
  "schema": {
    "type": "object",
    "properties": {
      "portfolio": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "UNDEFINED",
              "DEFAULT",
              "CONSUMER",
              "INTX"
            ],
            "default": "UNDEFINED"
          },
          "deleted": {
            "type": "boolean"
          }
        },
        "title": "Portfolio is the identifying information for a portfolio"
      }
    }
  }
}
